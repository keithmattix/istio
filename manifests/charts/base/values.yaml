# "_internal_defaults_do_not_set" is a workaround for Helm limitations. Users should NOT set "._internal_defaults_do_not_set" explicitly, but rather directly set the fields internally.
# For instance, instead of `--set _internal_defaults_do_not_set.foo=bar``, just set `--set foo=bar`.
_internal_defaults_do_not_set:
  global:

    # ImagePullSecrets for control plane ServiceAccount, list of secrets in the same namespace
    # to use for pulling any images in pods that reference this ServiceAccount.
    # Must be set for any cluster configured with private docker registry.
    imagePullSecrets: []

    # Used to locate istiod.
    istioNamespace: istio-system
  base:
    # A list of CRDs to exclude. Requires `enableCRDTemplates` to be true.
    # Example: `excludedCRDs: ["envoyfilters.networking.istio.io"]`.
    # Note: when installing with `istioctl`, `enableIstioConfigCRDs=false` must also be set.
    excludedCRDs: []
    # Helm (as of V3) does not support upgrading CRDs, because it is not universally
    # safe for them to support this.
    # Istio as a project enforces certain backwards-compat guarantees that allow us
    # to safely upgrade CRDs in spite of this, so we default to self-managing CRDs
    # as standard K8S resources in Helm, and disable Helm's CRD management. See also:
    # https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts
    enableCRDTemplates: true

    # Validation webhook configuration url
    # For example: https://$remotePilotAddress:15017/validate
    validationURL: ""
    # Validation webhook caBundle value. Useful when running pilot with a well known cert
    validationCABundle: ""

    # For istioctl usage to disable istio config crds in base
    enableIstioConfigCRDs: true

  defaultRevision: "default"
  experimental:
    stableValidationPolicy: false
    # Only for ambient on windows (pre-WS2025). Eventually, containerd and HCS will
    # support creating the network compartment as soon as the HNS Namespace is created
    # and not rely on a pause container. Until then, we enable this option to inject an initContainer
    # that waits for the ztunnel ports to be created in the pod namespaxe before proceeding.
    # Due to the nature of the ambient enablement API, we will always send the injection request
    # to the default revision.
    windowsAmbientInjection:
      enabled: false
      istiodRemote:
        # If `true`, indicates that this cluster/install should consume a "remote istiod" installation,
        # and istiod itself will NOT be installed in this cluster - only the support resources necessary
        # to utilize a remote instance.
        enabled: false
        # Sidecar injector mutating webhook configuration clientConfig.url value.
        # For example: https://$remotePilotAddress:15017/inject
        # The host should not refer to a service running in the cluster; use a service reference by specifying
        # the clientConfig.service field instead.
        injectionURL: ""

        # Sidecar injector mutating webhook configuration path value for the clientConfig.service field.
        # Override to pass env variables, for example: /inject/cluster/remote/net/network2
        injectionPath: "/inject"

        injectionCABundle: ""

